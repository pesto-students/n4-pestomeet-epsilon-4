import mongoose from "mongoose";
import { v4 as uuidv4 } from "uuid";
import { DB_EVENT_MODEL, DB_USER_MODEL } from "../../utils/app-constants";
export const eventSchema = new mongoose.Schema({
    eventId: { type: String, required: true, default: () => uuidv4() },
    eventName: { type: String, required: true },
    eventDescription: { type: String },
    eventType: { type: String, required: true },
    eventStart: { type: String, required: true },
    eventEnd: { type: String, required: true },
    eventColor: { type: String, required: true },
    organiserId: { type: String, required: true },
    attendees: { type: Array, required: function isSlot() {
            return this.eventType != 'slot';
        } },
    hasBooked: { type: Boolean, default: false },
    resourceCount: { type: Number, default: 0 },
    hasAssignment: { type: Boolean, required: function isSlot() {
            return this.eventType != 'slot';
        } },
    lastupdateTime: { type: Date, default: Date.now },
    createTime: { type: Date }
}, {
    toJSON: { virtuals: true },
    toObject: { virtuals: true }
});
eventSchema.virtual('organiserDetail', {
    ref: DB_USER_MODEL,
    localField: 'organiserId',
    foreignField: 'id',
    justOne: true
});
function isSlot() {
}
const eventModel = mongoose.model(DB_EVENT_MODEL, eventSchema);
export default eventModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQtc2NoZW1hLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZXZlbnQvc2NoZW1hL2V2ZW50LXNjaGVtYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLFFBQVEsTUFBTSxVQUFVLENBQUM7QUFDaEMsT0FBTyxFQUFFLEVBQUUsSUFBSSxNQUFNLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDcEMsT0FBTyxFQUFFLGNBQWMsRUFBQyxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQW1CekUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFTLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBUztJQUN6RCxPQUFPLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFDO0lBQ2hFLFNBQVMsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtJQUMzQyxnQkFBZ0IsRUFBQyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUM7SUFDL0IsU0FBUyxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO0lBQzNDLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtJQUM1QyxRQUFRLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUU7SUFDMUMsVUFBVSxFQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO0lBQzNDLFdBQVcsRUFBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtJQUM1QyxTQUFTLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxTQUFTLE1BQU07WUFDakQsT0FBTyxJQUFJLENBQUMsU0FBUyxJQUFJLE1BQU0sQ0FBQTtRQUNqQyxDQUFDLEVBQUM7SUFDRixTQUFTLEVBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUU7SUFDMUMsYUFBYSxFQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDO0lBQ3ZDLGFBQWEsRUFBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFDLFNBQVMsTUFBTTtZQUNyRCxPQUFPLElBQUksQ0FBQyxTQUFTLElBQUksTUFBTSxDQUFBO1FBQ2pDLENBQUMsRUFBQztJQUNGLGNBQWMsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUU7SUFDakQsVUFBVSxFQUFFLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQztDQUMxQixFQUFDO0lBQ0EsTUFBTSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtJQUMxQixRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO0NBQzdCLENBQUMsQ0FBQztBQUVILFdBQVcsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLEVBQUU7SUFDckMsR0FBRyxFQUFDLGFBQWE7SUFDakIsVUFBVSxFQUFDLGFBQWE7SUFDeEIsWUFBWSxFQUFDLElBQUk7SUFDakIsT0FBTyxFQUFFLElBQUk7Q0FDZCxDQUFDLENBQUM7QUFFSCxTQUFTLE1BQU07QUFFZixDQUFDO0FBRUQsTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDL0QsZUFBZSxVQUFVLENBQUMifQ==